  automation:
  - id: '1727726999508'
    alias: increment HP Timings
    description: Taktungen der WP hochzählen
    mode: single
    triggers:
      - entity_id:
          - sensor.eu08l_hp1_operating_state
        to: "1"
        id: Heating
        trigger: state
      - entity_id:
          - sensor.eu08l_hp1_operating_state
        to: "2"
        id: HotWater
        trigger: state
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - Heating
            sequence:
              - action: counter.increment
                metadata: {}
                data: {}
                target:
                  entity_id:
                    - counter.eu08l_heat_pump_cycling
                    - counter.eu08l_heat_pump_cycling_daily
          - conditions:
              - condition: trigger
                id:
                  - HotWater
            sequence:
              - action: counter.increment
                metadata: {}
                data: {}
                target:
                  entity_id:
                    - counter.eu08l_hot_water_cycling
                    - counter.eu08l_hot_water_cycling_daily
    
  - id: '1727727092095'
    alias: reset counter for daily HP timing
    description: Zähler für daily tacktung WP resetten
    triggers:
    - at: 00:00:00
      trigger: time
    conditions: []
    actions:
    - action: counter.reset
      metadata: {}
      data: {}
      target:
        entity_id:
        - counter.eu8l_heat_pump_cycling_daily
        - counter.eu08l_hot_water_cycling_daily
    mode: single
  - id: '6543235'
    alias: set Lambda Raumtemp
    description: ''
    triggers:
    - minutes: /5
      trigger: time_pattern
      enabled: false
    - entity_id:
      - sensor.thermometer_wohnzimmer_temperature
      trigger: state
    conditions: []
    actions:
    - data:
        hub: EU08L
        address: 5004
        value:
        - '{{ (float(states(''sensor.thermometer_wohnzimmer_temperature'')) *10 ) |round(0)  }}'
      action: modbus.write_register
    mode: single

  
  - id: e126b5f600a14eb0a31023668e251a08
    alias: Verbrauch nach Betriebsmodus akkumulieren
    description: ''
    triggers:
    - trigger: time_pattern
      seconds: /10
      enabled: false
    conditions: []
    actions:
    - choose:
      - conditions:
        - condition: state
          entity_id: sensor.eu08l_hp1_operating_state
          state: '1'
        sequence:
        - target:
            entity_id: input_number.eu08l_energy_heating_sum
          data:
            value: '{{ states(''input_number.eu08l_energy_heating_sum'') | float(0)
              + ((states(''sensor.eu08l_hp1_compressor_power_consumption_accumulated'')
              | float(0) / 1000) - states(''input_number.eu08l_last_consumption'') |
              float(0)) }}'
          action: input_number.set_value
      - conditions:
        - condition: state
          entity_id: sensor.eu08l_hp1_operating_state
          state: '2'
        sequence:
        - target:
            entity_id: input_number.eu08l_energy_hot_water_sum
          data:
            value: '{{ states(''input_number.eu08l_energy_hot_water_sum'') | float(0)
              + ((states(''sensor.eu08l_hp1_compressor_power_consumption_accumulated'')
              | float(0) / 1000)  - states(''input_number.eu08l_last_consumption'')
              | float(0)) }}'
          action: input_number.set_value
      default:
      - target:
          entity_id: input_number.eu08l_energy_rest_sum
        data:
          value: '{{ states(''input_number.eu08l_energy_rest_sum'') | float(0) + ((states(''sensor.eu08l_hp1_compressor_power_consumption_accumulated'')
            | float(0) / 1000)  - states(''input_number.eu08l_last_consumption'') |
            float(0)) }}'
        action: input_number.set_value
    - action: input_number.set_value
      metadata: {}
      data:
        value: "{% if states('sensor.eu08l_hp1_compressor_power_consumption_accumulated')
          | float(0) > 0 %}\n  {{ states('sensor.eu08l_hp1_compressor_power_consumption_accumulated')
          | float(0) / 1000 }}\n{% else %}\n  {{ states('input_number.eu08l_last_consumption')
          | float(0)}}\n{% endif %}"
      target:
        entity_id: input_number.eu08l_last_consumption
    mode: single